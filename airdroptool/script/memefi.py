api_key = "import requests, time
import json, random, string, os
from datetime import datetime, timezone
from termcolor import colored
from function import *
version = "6.0.0"
name_tool = "memefi"
BANNER(name_tool, version)

def telegramUserMe(headers, proxies=None):
  error_count = 0
  max_retries = 10
  data = {"operationName":"QueryTelegramUserMe","variables":{},"query":"query QueryTelegramUserMe {\n  telegramUserMe {\n    firstName\n    lastName\n    telegramId\n    username\n    referralCode\n    isDailyRewardClaimed\n    referral {\n      username\n      lastName\n      firstName\n      bossLevel\n      coinsAmount\n      __typename\n    }\n    isReferralInitialJoinBonusAvailable\n    league\n    leagueIsOverTop10k\n    leaguePosition\n    _id\n    opens {\n      isAvailable\n      openType\n      __typename\n    }\n    features\n    __typename\n  }\n}"}
  while True:
    try:
      if proxies:
        response = requests.post("https://api-gw-tg.memefi.club/graphql", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api-gw-tg.memefi.club/graphql", headers=headers, json=data, timeout=30)
      response.raise_for_status()
      data = response.json()["data"]["telegramUserMe"]
      username = data["username"]
      #print(username)
      break
    except requests.exceptions.RequestException:
      error_count += 1
      print(response.text)
      print(f"Hàm telegramUserMe, đang xảy ra lỗi. Thử lại lần {error_count}/{max_retries}")
      if error_count >= max_retries:
        print("Đã gặp lỗi quá 10 lần, khởi chạy hàm RUN_MEMEFI(acc_max)")
        RUN_MEMEFI(acc_max)
        break
      COUNTDOWN(10)
    except ValueError:
      print(f"Hàm telegramUserMe, Error decoding JSON response")
      break
    except KeyError as e:
      print(f"Hàm telegramUserMe, Key error: {e}")
      break
  return username
def GAME_CONFIG(headers, proxies=None):
  error_count = 0
  max_retries = 10
  data = {"operationName":"QUERY_GAME_CONFIG","variables":{},"query":"query QUERY_GAME_CONFIG {\n  telegramGameGetConfig {\n    ...FragmentBossFightConfig\n    __typename\n  }\n}\n\nfragment FragmentBossFightConfig on TelegramGameConfigOutput {\n  _id\n  coinsAmount\n  currentEnergy\n  maxEnergy\n  weaponLevel\n  energyLimitLevel\n  energyRechargeLevel\n  tapBotLevel\n  currentBoss {\n    _id\n    level\n    currentHealth\n    maxHealth\n    __typename\n  }\n  freeBoosts {\n    _id\n    currentTurboAmount\n    maxTurboAmount\n    turboLastActivatedAt\n    turboAmountLastRechargeDate\n    currentRefillEnergyAmount\n    maxRefillEnergyAmount\n    refillEnergyLastActivatedAt\n    refillEnergyAmountLastRechargeDate\n    __typename\n  }\n  bonusLeaderDamageEndAt\n  bonusLeaderDamageStartAt\n  bonusLeaderDamageMultiplier\n  nonce\n  __typename\n}"}
  while True:
    try:
      if proxies:
        response = requests.post("https://api-gw-tg.memefi.club/graphql", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api-gw-tg.memefi.club/graphql", headers=headers, json=data, timeout=30)
      response.raise_for_status()
      data = response.json()["data"]["telegramGameGetConfig"]
      balance = data["coinsAmount"]
      Energy = data["currentEnergy"]
      maxEnergy = data["maxEnergy"]
      dame = data["weaponLevel"] + 1
      levelBoss = data["currentBoss"]["level"]
      HealthBoss = data["currentBoss"]["currentHealth"]
      maxHealthBoss = data["currentBoss"]["maxHealth"]
      TurboAmount = data["freeBoosts"]["currentTurboAmount"]
      RecoveryAmount = data["freeBoosts"]["currentRefillEnergyAmount"]
      nonce = data["nonce"]
      break
    except requests.exceptions.RequestException:
      error_count += 1
      print(response.text)
      print(f"Hàm GAME_CONFIG, đang xảy ra lỗi. Thử lại lần {error_count}/{max_retries}")
      if error_count >= max_retries:
        print("Đã gặp lỗi quá 10 lần, khởi chạy hàm RUN_MEMEFI(acc_max)")
        RUN_MEMEFI(acc_max)
        break
      COUNTDOWN(10)
    except ValueError:
      print(f"Hàm GAME_CONFIG, Error decoding JSON response")
      break
    except KeyError as e:
      print(f"Hàm GAME_CONFIG, Key error: {e}")
      break
  return balance, Energy, maxEnergy, dame, levelBoss, HealthBoss, maxHealthBoss, TurboAmount, RecoveryAmount, nonce
headers = {
  "Host":"api-gw-tg.memefi.club",
  "content-length":"558",
  "Accept": "*/*",
  "Accept-Encoding": "gzip, deflate, br, zstd",
  "sec-ch-ua-mobile":"?1",
  "Accept-Language": "en-US,en;q=0.9",
  "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6IjY2NTk4NWJlZDYwZDkxYzljY2U3OGU2YSIsInVzZXJuYW1lIjoibWluaG5nb2M4MjkyIn0sInNlc3Npb25JZCI6IjY2NTk4NWU2YjdmMjE0ZTJkNDA0Mzg5YiIsInN1YiI6IjY2NTk4NWJlZDYwZDkxYzljY2U3OGU2YSIsImlhdCI6MTcxNzE0MzAxNCwiZXhwIjoxNzE3NzQ3ODE0fQ.7XtrNsjX2bDJohqchfx3c1mKhSkaIwpmVdo5-eLpivg",
  "Content-Type": "application/json",
  "Referer": "https://tg-app.memefi.club/",
  "origin": "https://tg-app.memefi.club/",
  "Sec-Fetch-Dest": "empty",
  "Sec-Fetch-Mode": "cors",
  "Sec-Fetch-Site": "same-site",
  "User-Agent": "Mozilla/5.0 (Linux; Android 13; 2201117TG Build/TKQ1.221114.001) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.6422.54 Mobile Safari/537.36"}
proxies = None
print(GAME_CONFIG(headers,proxies))
time.sleep(9999)
def DAME_BOT(headers, nonce, count_tap, proxies=None):
  error_count = 0
  max_retries = 10
  data = {"operationName":"MutationGameProcessTapsBatch","variables":{"payload":{"nonce":nonce,"tapsCount":count_tap}},"query":"mutation MutationGameProcessTapsBatch($payload: TelegramGameTapsBatchInput!) {\n  telegramGameProcessTapsBatch(payload: $payload) {\n    ...FragmentBossFightConfig\n    __typename\n  }\n}\n\nfragment FragmentBossFightConfig on TelegramGameConfigOutput {\n  _id\n  coinsAmount\n  currentEnergy\n  maxEnergy\n  weaponLevel\n  energyLimitLevel\n  energyRechargeLevel\n  tapBotLevel\n  currentBoss {\n    _id\n    level\n    currentHealth\n    maxHealth\n    __typename\n  }\n  freeBoosts {\n    _id\n    currentTurboAmount\n    maxTurboAmount\n    turboLastActivatedAt\n    turboAmountLastRechargeDate\n    currentRefillEnergyAmount\n    maxRefillEnergyAmount\n    refillEnergyLastActivatedAt\n    refillEnergyAmountLastRechargeDate\n    __typename\n  }\n  bonusLeaderDamageEndAt\n  bonusLeaderDamageStartAt\n  bonusLeaderDamageMultiplier\n  nonce\n  __typename\n}"}
  while True:
    try:
      if proxies:
        response = requests.post("https://api-gw-tg.memefi.club/graphql", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api-gw-tg.memefi.club/graphql", headers=headers, json=data, timeout=30)
      response.raise_for_status()
      data = response.json()["data"]["telegramGameProcessTapsBatch"]
      balance = data["coinsAmount"]
      Energy = data["currentEnergy"]
      maxEnergy = data["maxEnergy"]
      HealthBoss = data["currentBoss"]["currentHealth"]
      maxHealthBoss = data["currentBoss"]["maxHealth"]
      nonce = data["nonce"]
      break
    except requests.exceptions.RequestException:
      error_count += 1
      print(f"Hàm DAME_BOT, đang xảy ra lỗi. Thử lại lần {error_count}/{max_retries}")
      if error_count >= max_retries:
        print("Đã gặp lỗi quá 10 lần, khởi chạy hàm RUN_MEMEFI(acc_max)")
        RUN_MEMEFI(acc_max)
        break
      COUNTDOWN(10)
    except ValueError:
      print(f"Hàm DAME_BOT, Error decoding JSON response")
      break
    except KeyError as e:
      print(f"Hàm DAME_BOT, Key error: {e}")
      break
  return balance, Energy, maxEnergy, HealthBoss, maxHealthBoss, nonce
def BOOTERS_ACTIVE(headers, booter, proxies=None):
  time.sleep(20)
  error_count = 0
  max_retries = 10
  data = {"operationName":"telegramGameActivateBooster","variables":{"boosterType":booter},"query":"mutation telegramGameActivateBooster($boosterType: BoosterType!) {\n  telegramGameActivateBooster(boosterType: $boosterType) {\n    ...FragmentBossFightConfig\n    __typename\n  }\n}\n\nfragment FragmentBossFightConfig on TelegramGameConfigOutput {\n  _id\n  coinsAmount\n  currentEnergy\n  maxEnergy\n  weaponLevel\n  energyLimitLevel\n  energyRechargeLevel\n  tapBotLevel\n  currentBoss {\n    _id\n    level\n    currentHealth\n    maxHealth\n    __typename\n  }\n  freeBoosts {\n    _id\n    currentTurboAmount\n    maxTurboAmount\n    turboLastActivatedAt\n    turboAmountLastRechargeDate\n    currentRefillEnergyAmount\n    maxRefillEnergyAmount\n    refillEnergyLastActivatedAt\n    refillEnergyAmountLastRechargeDate\n    __typename\n  }\n  bonusLeaderDamageEndAt\n  bonusLeaderDamageStartAt\n  bonusLeaderDamageMultiplier\n  nonce\n  __typename\n}"}
  while True:
    try:
      if proxies:
        response = requests.post("https://api-gw-tg.memefi.club/graphql", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api-gw-tg.memefi.club/graphql", headers=headers, json=data, timeout=30)
      response.raise_for_status()
      data = response.json()["data"]["telegramGameActivateBooster"]
      balance = data["coinsAmount"]
      Energy = data["currentEnergy"]
      maxEnergy = data["maxEnergy"]
      HealthBoss = data["currentBoss"]["currentHealth"]
      maxHealthBoss = data["currentBoss"]["maxHealth"]
      TurboAmount = data["freeBoosts"]["currentTurboAmount"]
      nonce = data["nonce"]
      break
    except requests.exceptions.RequestException:
      error_count += 1
      print(f"Hàm BOOTERS_ACTIVE, đang xảy ra lỗi. Thử lại lần {error_count}/{max_retries}")
      if error_count >= max_retries:
        print("Đã gặp lỗi quá 10 lần, khởi chạy hàm RUN_MEMEFI(acc_max)")
        RUN_MEMEFI(acc_max)
        break
      COUNTDOWN(10)
    except ValueError:
      print(f"Hàm BOOTERS_ACTIVE, Error decoding JSON response")
      break
    except KeyError as e:
      print(f"Hàm BOOTERS_ACTIVE, Key error: {e}")
      break
  return balance, Energy, maxEnergy, HealthBoss, maxHealthBoss, TurboAmount, nonce
def NEXT_BOSS(headers, proxies=None):
  error_count = 0
  max_retries = 10
  data = {"operationName":"telegramGameSetNextBoss","variables":{},"query":"mutation telegramGameSetNextBoss {\n  telegramGameSetNextBoss {\n    ...FragmentBossFightConfig\n    __typename\n  }\n}\n\nfragment FragmentBossFightConfig on TelegramGameConfigOutput {\n  _id\n  coinsAmount\n  currentEnergy\n  maxEnergy\n  weaponLevel\n  energyLimitLevel\n  energyRechargeLevel\n  tapBotLevel\n  currentBoss {\n    _id\n    level\n    currentHealth\n    maxHealth\n    __typename\n  }\n  freeBoosts {\n    _id\n    currentTurboAmount\n    maxTurboAmount\n    turboLastActivatedAt\n    turboAmountLastRechargeDate\n    currentRefillEnergyAmount\n    maxRefillEnergyAmount\n    refillEnergyLastActivatedAt\n    refillEnergyAmountLastRechargeDate\n    __typename\n  }\n  bonusLeaderDamageEndAt\n  bonusLeaderDamageStartAt\n  bonusLeaderDamageMultiplier\n  nonce\n  __typename\n}"}
  while True:
    try:
      if proxies:
        response = requests.post("https://api-gw-tg.memefi.club/graphql", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api-gw-tg.memefi.club/graphql", headers=headers, json=data, timeout=30)
      response.raise_for_status()
      data = response.json()["data"]["telegramGameSetNextBoss"]
      balance = data["coinsAmount"]
      Energy = data["currentEnergy"]
      maxEnergy = data["maxEnergy"]
      levelBoss = data["currentBoss"]["level"]
      HealthBoss = data["currentBoss"]["currentHealth"]
      maxHealthBoss = data["currentBoss"]["maxHealth"]
      nonce = data["nonce"]
      break
    except requests.exceptions.RequestException:
      error_count += 1
      print(f"Hàm NEXT_BOSS, đang xảy ra lỗi. Thử lại lần {error_count}/{max_retries}")
      if error_count >= max_retries:
        print("Đã gặp lỗi quá 10 lần, khởi chạy hàm RUN_MEMEFI(acc_max)")
        RUN_MEMEFI(acc_max)
        break
      COUNTDOWN(10)
    except ValueError:
      print(f"Hàm NEXT_BOSS, Error decoding JSON response")
      break
    except KeyError as e:
      print(f"Hàm NEXT_BOSS, Key error: {e}")
      break
  return balance, Energy, maxEnergy, levelBoss, HealthBoss, maxHealthBoss, nonce

acc_max = 0
def RUN_MEMEFI(acc_max):
  with open('config.json', 'r', encoding='utf-8') as file:
    config_data = json.loads(remove_comments(file.read()))
  users = config_data['users']
  if acc_max == len(users):
    now_time = datetime.now().strftime("%H:%M:%S")
    print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {lục} TOÀN BỘ TÀI KHOẢN ĐÃ MAX")
    exit()
  for user in users:
    authorization = user["authorization_memefi"]
    if authorization == "":
      continue
    if authorization == "":
      print(f"{đỏ}Mã authorization của acc {vàng}{chon_acc} {đỏ}đang trống, hãy lấy mã authorization nhập vào bên dưới")
      authorization = input(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}NHẬP MÃ authorization{đen}: {lam}")
    proxy_list = config_acc["proxy"]
    type_proxy = config_acc["type_proxy"]
    user_agent = config_acc["user-agent"]
    if proxy_list != "":
      proxy_list = proxy_list.split(":")
      proxy = f"{type_proxy}://{proxy_list[2]}:{proxy_list[3]}@{proxy_list[0]}:{proxy_list[1]}"
      proxies = {
      'http': proxy,
      'https': proxy,}
    else:
      if account.split('_')[1] != "1":
        print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}Chuyển tài khoản do không có proxy")
        continue
      proxies = ""
    ip, fakeip = getIP(proxies)
    if ip == fakeip == None:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {đỏ}\nĐỔI TÀI KHOẢN DO KHÔNG LẤY ĐƯỢC IP, HÃY KIỂM TRA LẠI PROXY\n")
      continue
    headers = {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate, br, zstd",
      "Accept-Language": "en-US,en;q=0.9",
      "Authorization": authorization,
      "Content-Type": "application/json",
      "Referer": "https://tg-app.memefi.club/",
      "Sec-Fetch-Dest": "empty",
      "Sec-Fetch-Mode": "cors",
      "Sec-Fetch-Site": "same-site",
      "User-Agent": user_agent}
    username = telegramUserMe(headers,proxies)
    balance, Energy, maxEnergy, dame, levelBoss, HealthBoss, maxHealthBoss, TurboAmount, RecoveryAmount, nonce = GAME_CONFIG(headers, proxies)
    print(f"""{đậm}{đen}<<<<<<<<<<<<<<<<<<<{lam}[{vàngBG}{đỏ}THÔNG TÀI KHOẢN MEMEFI{đenBG}{lam}]{đen}>>>>>>>>>>>>>>>>>>\n{đen}〘👤〙{trắng}UserName {đỏ}: {lục}{username} {trắng}({hồng}{account.split('_')[1]}{trắng})\n{đen}〘🪙〙{trắng}Số Dư {đỏ}: {vàng}{balance}\n{đen}〘📊〙{trắng}Thông số Game{đỏ}: {vàng}+{dame}{đen}/{vàng}click {đỏ}[{lam}{Energy}{đen}/{lam}{maxEnergy}{đỏ}] {TurboAmount} {RecoveryAmount}\n{đen}〘👹〙{trắng}Thông tin Boss{đỏ}: {xanh}level {levelBoss} {đen}| {hồng}{HealthBoss}💖{đen}/{hồng}{maxHealthBoss}💖\n{đen}〘🌏〙{trắng}IP {đỏ}: {nâu}{ip} {lục}»»» {trắng}Fake IP {đỏ}: {lam}{fakeip}\n""")
    start_time = datetime.now()
    print(f"{đỏ}\033[1;33;40mBẮT ĐẦU CHẠY TOOL {thường}{đậm}{đỏ}» {đen}[{vàng}{start_time.strftime('%H:%M:%S')}{đen}]\n")
    if levelBoss == 11 and HealthBoss == 0:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {lục}Tài khoản đã MAX level {xanh}{levelBoss} {đỏ}[{hồng}{HealthBoss}{đen}/{hồng}{maxHealthBoss}{đỏ}] » {vàng}🪙{balance}")
      acc_max += 1
      continue
    if TurboAmount > 0:
      for i in range(0,TurboAmount):
        balance, Energy, maxEnergy, HealthBoss, maxHealthBoss, newTurboAmount, nonce = BOOTERS_ACTIVE(headers, "Turbo", proxies)
        if newTurboAmount < TurboAmount:
          now_time = datetime.now().strftime("%H:%M:%S")
          print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}KÍCH HOẠT {vàng}TURBO {trắng} THÀNH CÔNG")
          newbalance, Energy, maxEnergy, newHealthBoss, maxHealthBoss, nonce = DAME_BOT(headers, nonce, 1000000, proxies)
          if newHealthBoss == 0:
            collectAmount = newbalance - balance
            now_time = datetime.now().strftime("%H:%M:%S")
            print(f"{đen}╔═{đỏ}[{vàng}{now_time}{đỏ}] {trắng}Đã KILL Boss {vàng}+{collectAmount}🪙 {đỏ}»", end=" ")
            print(f"🪙{vàng}{newbalance}\n{đen}╚⫸{hồng}Link tool & hướng dẫn tại Telegram{đỏ}: {lục}@AnubisMMO\n")
            if levelBoss == 11:
              now_time = datetime.now().strftime("%H:%M:%S")
              print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {lục}Tài khoản đã MAX level {xanh}{levelBoss} {đỏ}[{hồng}{HealthBoss}{đen}/{hồng}{maxHealthBoss}{đỏ}] » {vàng}🪙{balance}")
              acc_max += 1
              RUN_MEMEFI(acc_max)
            username = telegramUserMe(headers,proxies)
            balance, Energy, maxEnergy, dame, levelBoss, HealthBoss, maxHealthBoss, TurboAmount, RecoveryAmount, nonce = GAME_CONFIG(headers, proxies)
            balance, Energy, maxEnergy, levelBoss, HealthBoss, maxHealthBoss, nonce = NEXT_BOSS(headers,proxies)
            if HealthBoss == maxHealthBoss:
              print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}ĐÃ CẬP NHẬT BOSS TIẾP THEO {đỏ}[{hồng}{HealthBoss}{đen}/{hồng}{maxHealthBoss}{đỏ}]\n")
            else:
              print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {đỏ}CẬP NHẬT BOSS THẤT BẠI{đỏ}[{hồng}{HealthBoss}{đen}/{hồng}{maxHealthBoss}{đỏ}]\n")
          else:
            print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {đỏ}BOSS VẪN CHƯA BỊ KILL {đỏ}[{hồng}{HealthBoss}{đen}/{hồng}{maxHealthBoss}{đỏ}] » {vàng}🪙{newbalance}\n")
        else:
          print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {đỏ}HIỆN ĐANG CÒN {vàng}KÍCH HOẠT {lục}TURBO {đỏ}THẤT BẠI\n")
    while True:
      if int(Energy/dame) > 10:
        if Energy/dame > 50:
          count_tap = random.randint(50,int(Energy/dame))
        else:
          count_tap = int(Energy/dame)
        balance, Energy, maxEnergy, newHealthBoss, maxHealthBoss, nonce = DAME_BOT(headers, nonce, count_tap, proxies)
        now_time = datetime.now().strftime("%H:%M:%S")
        if newHealthBoss < HealthBoss:
          collectAmount = dame*count_tap
          print(f"{đen}╔═{đỏ}[{vàng}{now_time}{đỏ}] {trắng}Đã đánh BOSS {lục}{count_tap} {trắng}lần {vàng}+{collectAmount}🪙 {đỏ}»", end=" ")
          print(f"🪙{vàng}{balance}\n{đen}╚⫸{hồng}Link tool & hướng dẫn tại Telegram{đỏ}: {lục}@AnubisMMO\n")
        else:
          now_time = datetime.now().strftime("%H:%M:%S")
          print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ}Đánh Boss thất bại {đỏ}[{hồng}{HealthBoss}{đen}/{hồng}{maxHealthBoss}{đỏ}] » {vàng}🪙{balance}")
      balance, Energy, maxEnergy, dame, levelBoss, HealthBoss, maxHealthBoss, TurboAmount, RecoveryAmount, nonce = GAME_CONFIG(headers, proxies)
      if RecoveryAmount > 0 and Energy/dame < 10:
        balance, Energy, maxEnergy, HealthBoss, maxHealthBoss, TurboAmount, nonce = BOOTERS_ACTIVE(headers, "Recharge", proxies)
        if Energy == maxEnergy:
          print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}ĐÃ KÍCH HOẠT {lục}RECHARGE {lục}THÀNH CÔNG {đỏ}[{vàng}{Energy}{đen}/{vàng}{maxEnergy}{đỏ}]\n")
        else:
          print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {đỏ}KÍCH HOẠT {vàng}RECHARGE {đỏ}THẤT BẠI\n")
      elif Energy/dame < 10:
        print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}HẾT LƯỢT CLICK, HẾT BOOTERS {đỏ}» {vàng}ĐỔI TÀI KHOẢN\n")
        break
RUN_MEMEFI(acc_max)"