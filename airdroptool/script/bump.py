api_key = "import requests, time
import json, random, string, os
from datetime import datetime, timezone
from termcolor import colored
from function import *
version = "6.0.0"
name_tool = "bump"
BANNER(name_tool, version)
print(f"""
{đỏ}⟩{vàng}⟩{lục}⟩ {lam}CÁC CHỨC NĂNG CỦA TOOL
{đỏ}[{vàng}+{đỏ}] {trắng}Auto điểm danh hàng ngày
{đỏ}[{vàng}+{đỏ}] {trắng}Auto start farm
{đỏ}[{vàng}+{đỏ}] {trắng}Auto claim farm + fake lượt tap
{đỏ}[{vàng}+{đỏ}] {trắng}Auto hoàn thành các nhiệm vụ (ngoài Telegram)
{đỏ}[{vàng}+{đỏ}] {trắng}Nâng cấp booter lên x5
""")
def LOGIN(headers, data, proxies=None):
  error_count = 0
  max_retries = 10
  headers["content-length"] = str(len(str(data).replace(" ","")))
  while True:
    try:
      if proxies:
        response = requests.post("https://api.mmbump.pro/v1/loginJwt", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api.mmbump.pro/v1/loginJwt",headers=headers, json=data, timeout=30)
      response.raise_for_status()
      token = response.json()["access_token"]
      headers.pop("content-length")
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool BUMP")
      RUM_BUMP()
      break
    COUNTDOWN(10)
  return token
def FARMING(headers, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.post("https://api.mmbump.pro/v1/farming", headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api.mmbump.pro/v1/farming",headers=headers, timeout=30)
      response.raise_for_status()
      getdata = response.json()
      farm = getdata["info"]["farm"]
      taps = getdata["info"]["taps"]
      if "boost" in getdata["info"]:
        boost = getdata["info"]["boost"]
      else:
        boost = "x1"
      balance = getdata["balance"]
      telegram_id = getdata["telegram_id"]
      session = getdata["session"]
      start_at = moon_time = ""
      if "start_at" in session:
        start_at = getdata["session"]["start_at"]
      if "moon_time" in session:
        moon_time = getdata["session"]["moon_time"]
      system_time = getdata["system_time"]
      day_grant_first = getdata["day_grant_first"]
      day_grant_day = getdata["day_grant_day"]
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool BUMP")
      RUM_BUMP()
      break
    COUNTDOWN(10)
  return farm, taps, boost, balance,  telegram_id, start_at, moon_time, system_time, day_grant_first, day_grant_day, session
def DAILY_CLAIM(headers, proxies=None):
  error_count = 0
  max_retries = 10
  data = ""
  headers["content-length"] = str(len(str(data).replace(" ","")))
  while True:
    try:
      if proxies:
        response = requests.post("https://api.mmbump.pro/v1/grant-day/claim", headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api.mmbump.pro/v1/grant-day/claim",headers=headers, timeout=30)
      response.raise_for_status()
      balance = response.json()["balance"]
      headers.pop("content-length")
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool BUMP")
      RUM_BUMP()
      break
    COUNTDOWN(10)
  return balance
def FARM_START(headers, proxies=None):
  error_count = 0
  max_retries = 10
  data = {"status":"inProgress"}
  headers["content-length"] = str(len(str(data).replace(" ","")))
  while True:
    try:
      if proxies:
        response = requests.post("https://api.mmbump.pro/v1/farming/start", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api.mmbump.pro/v1/farming/start",headers=headers, json=data, timeout=30)
      response.raise_for_status()
      status = response.status_code
      headers.pop("content-length")
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool BUMP")
      RUM_BUMP()
      break
    COUNTDOWN(10)
  return status
def FARM_FINISH(headers, proxies=None):
  error_count = 0
  max_retries = 10
  data = {"tapCount":5000000}
  headers["content-length"] = str(len(str(data).replace(" ","")))
  while True:
    try:
      if proxies:
        response = requests.post("https://api.mmbump.pro/v1/farming/finish", headers=headers, proxies=proxies, json=data, timeout=30)
      else:
        response = requests.post("https://api.mmbump.pro/v1/farming/finish",headers=headers, json=data, timeout=30)
      response.raise_for_status()
      balance = response.json()["balance"]
      headers.pop("content-length")
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool BUMP")
      RUM_BUMP()
      break
    COUNTDOWN(10)
  return balance
def TASK_LIST(headers, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.post("https://api.mmbump.pro/v1/task-list", headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api.mmbump.pro/v1/task-list",headers=headers, timeout=30)
      response.raise_for_status()
      taskList = response.json()
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool BUMP")
      RUM_BUMP()
      break
    COUNTDOWN(10)
  return taskList
def TASK_COMPLETE(headers, data, proxies=None):
  error_count = 0
  max_retries = 10
  headers["content-length"] = str(len(str(data).replace(" ","")))
  while True:
    try:
      if proxies:
        response = requests.post("https://api.mmbump.pro/v1/task-list/complete", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api.mmbump.pro/v1/task-list/complete",headers=headers, json=data, timeout=30)
      response.raise_for_status()
      balance = response.json()["balance"]
      headers.pop("content-length")
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool BUMP")
      RUM_BUMP()
      break
    COUNTDOWN(10)
  return balance
def UPGRADE(headers, proxies=None):
  error_count = 0
  max_retries = 10
  data = {"id":"x5"}
  headers["content-length"] = str(len(str(data).replace(" ","")))
  while True:
    try:
      if proxies:
        response = requests.post("https://api.mmbump.pro/v1/product-list/buy", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api.mmbump.pro/v1/product-list/buy",headers=headers, json=data, timeout=30)
      response.raise_for_status()
      balance = response.json()["balance"]
      price = response.json()["price"]
      headers.pop("content-length")
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool BUMP")
      RUM_BUMP()
      break
    COUNTDOWN(10)
  return balance, price

def RUM_BUMP():
  with open('config/bump.json', 'r', encoding='utf-8') as file:
    config_data = json.loads(remove_comments(file.read()))
  users = config_data
  if len(users) > 10:
    print("Bạn chỉ được phép thêm tối đa 10 tài khoản để chạy tool")
    exit()
  for user in users:
    account = user["STT_ACCOUNT"]
    data_bump = user["DATA"]
    data = data_bump[0]
    user_auth = data_bump[1]
    if data == "" or data == "thay_thế_bằng_DATA_bỏ_dấu_nháy_kép":
      print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {đỏ}Tài khoản {vàng}{account.split('_')[1]} {đỏ}DATA đang bị trống")
      continue
    with open('config/setting.json', 'r', encoding='utf-8') as file:
      config_acc = json.loads(remove_comments(file.read()))[account]
    proxy_list = config_acc["proxy"]
    type_proxy = config_acc["type_proxy"]
    user_agent = config_acc["user-agent"]
    if proxy_list != "":
      proxy_list = proxy_list.split(":")
      proxy = f"{type_proxy}://{proxy_list[2]}:{proxy_list[3]}@{proxy_list[0]}:{proxy_list[1]}"
      proxies = {
      'http': proxy,
      'https': proxy,}
    else:
      if account.split('_')[1] != "1":
        print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}Chuyển tài khoản do không có proxy")
        continue
      proxies = ""
    ip, fakeip = getIP(proxies)
    if ip == fakeip == None:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {đỏ}\nĐỔI TÀI KHOẢN DO KHÔNG LẤY ĐƯỢC IP, HÃY KIỂM TRA LẠI PROXY\n")
      continue
    headers = {
      'Host': 'api.mmbump.pro',
      'sec-ch-ua': '"Not/A)Brand";v="8", "Chromium";v="126", "Android WebView";v="126"',
      'accept': 'application/json, text/plain, */*',
      'user_auth': user_auth,
      'content-type': 'application/json',
      'sec-ch-ua-mobile': '?1',
      'user-agent': user_agent,
      'sec-ch-ua-platform': '"Android"',
      'origin': 'https://mmbump.pro',
      'x-requested-with': 'mark.via.gx',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      'referer': 'https://mmbump.pro/',
      'accept-encoding': 'gzip, deflate, br, zstd',
      'accept-language': 'vi-VN,vi;q=0.9,en-US;q=0.8,en;q=0.7',
      'priority': 'u=1, i'}
    token = LOGIN(headers, data, proxies)
    headers["Authorization"] = f"Bearer {token}"
    farm, taps, boost, balance,  telegram_id, start_at, moon_time, system_time, day_grant_first, day_grant_day, session = FARMING(headers, proxies)
    total_acc = len(users)
    stt_acc = account.split("_")[1]
    print(f"""{đậm}{đen}<<<<<<<<<<<<<<<<<<{lam}[{vàngBG}{đỏ}THÔNG TIN TÀI KHOẢN BUMP{đenBG}{lam}]{đen}>>>>>>>>>>>>>>>>>>\n{đen}〘👤〙{trắng}UserID {đỏ}: {lục}{telegram_id} {trắng}({hồng}{account.split('_')[1]}{trắng})\n{đen}〘🪙〙{trắng}Số Dư {đỏ}: {vàng}{balance:,}\n{đen}〘📊〙{trắng}Thông số Game{đỏ}: {trắng}{boost}⚡ {lục}{taps}👆 {vàng}{farm:,}🪙\n{đen}〘🌏〙{trắng}IP {đỏ}: {nâu}{ip} {lục}»»» {trắng}Fake IP {đỏ}: {lam}{fakeip}\n""")
    
    start_time = datetime.now()
    print(f"{đỏ}\033[1;33;40mBẮT ĐẦU CHẠY TOOL {thường}{đậm}{đỏ}» {đen}[{vàng}{start_time.strftime('%H:%M:%S')}{đen}]\n")
    if day_grant_first == None:
      day_grant_first = 0
    if day_grant_day == None:
      day_grant_day = 0
    if day_grant_day == 0 or (system_time-day_grant_first)/3600-24*day_grant_day > 0:
      newbalance = DAILY_CLAIM(headers, proxies)
      now_time = datetime.now().strftime("%H:%M:%S")
      if newbalance > balance:
        countCollect = newbalance - balance
        balance = newbalance
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã {lam}điểm danh {trắng}thành công {vàng}+{countCollect:,} {đen}» {vàng}{balance:,}")
      else:
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ}Đã {lam}điểm danh {đỏ}thất bại {đen}» {vàng}{balance:,}")
    if session["status"] == "await":
      status = FARM_START(headers, proxies)
      now_time = datetime.now().strftime("%H:%M:%S")
      if status == 200:
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã bắt đầu {lam}FARM")
      else:
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ}Bắt đầu {lam}FARM {đỏ}thất bại")
    elif session["status"] == "inProgress":
      start_at = session["start_at"]
      moon_time = session["moon_time"]
      if (system_time-start_at)/3600 > 6:
        newbalance = FARM_FINISH(headers, proxies)
        now_time = datetime.now().strftime("%H:%M:%S")
        if newbalance > balance:
          countCollect = newbalance - balance
          balance = newbalance
          print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã {lam}CLAIM FARM {vàng}+{countCollect:,} {đen}» {vàng}{balance:,}")
          status = FARM_START(headers, proxies)
          now_time = datetime.now().strftime("%H:%M:%S")
          if status == 200:
            print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã bắt đầu {lam}FARM")
          else:
            print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ}Bắt đầu {lam}FARM {đỏ}thất bại")
        else:
          print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ}Đã {lam}CLAIM FARM {đỏ}thất bại {đen}» {vàng}{balance:,}")
      else:
        now_time = datetime.now().strftime("%H:%M:%S")
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Chưa đến thời gian {lam}Claim {trắng}phần thưởng")
    taskList = TASK_LIST(headers, proxies)
    for task in taskList:
      if "TELEGRAM" not in task["name"].upper() and task["status"] == "possible":
        name_task = task["name"]
        reward_task = task["grant"]
        newbalance = TASK_COMPLETE(headers, {"id":task["id"]}, proxies)
        now_time = datetime.now().strftime("%H:%M:%S")
        if newbalance > balance:
          balance = newbalance
          print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Hoàn thành {lam}{name_task} {vàng}+{reward_task:,} {đen}» {vàng}{balance:,}")
        else:
          print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ}Hoàn thành {lam}{name_task} {đỏ}thất bại {đen}» {vàng}{balance:,}")
    if balance > 200000000 and boost != "x5":
      newbalance, price = UPGRADE(headers, proxies)
      now_time = datetime.now().strftime("%H:%M:%S")
      if newbalance < balance:
        balance = newbalance
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã {lam}nâng cấp {trắng}booster {lục}x5 {đỏ}-{price:,} {đen}» {vàng}{balance:,}")
      else:
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ}Nâng cấp thất bại {đen}» {vàng}{balance:,}")
    print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}ĐỔI TÀI KHOẢN")
RUM_BUMP()"