api_key = "import requests, time
import json, random, string, os
from datetime import datetime, timezone
from termcolor import colored
from function import *
version = "6.0.1"
name_tool = "dotcoin"
BANNER(name_tool, version)
print(f"""
{đỏ}⟩{vàng}⟩{lục}⟩ {lam}CÁC CHỨC NĂNG CỦA TOOL
{đỏ}[{vàng}+{đỏ}] {trắng}Auto click
{đỏ}[{vàng}+{đỏ}] {trắng}Auto sử dụng booster
{đỏ}[{vàng}+{đỏ}] {trắng}Auto nâng cấp booster (không cần thiết)
{đỏ}[{vàng}+{đỏ}] {trắng}Auto hoàn thành các nhiệm vụ
""")
def PROFILE(headers, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.get("https://jjvnmoyncmcewnuykyid.supabase.co/rest/v1/rpc/get_user_info", headers=headers, json={}, proxies=proxies, timeout=30)
      else:
        response = requests.get("https://jjvnmoyncmcewnuykyid.supabase.co/rest/v1/rpc/get_user_info", headers=headers, json={}, timeout=30)
      response.raise_for_status()
      getdata = response.json()
      username = getdata["first_name"]
      level = getdata["level"]
      energy = getdata["daily_attempts"]
      energyMax = getdata["limit_attempts"]
      balance = getdata["balance"]
      dame = getdata["multiple_clicks"]
      clan = getdata["group"]
      try_luck = getdata["gamex2_times"]
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DOTCOIN")
      RUN_DOTCOIN()
      break
    COUNTDOWN(10)
  return username, balance, energy, clan, dame, energyMax, level, try_luck
def CLICK(headers, data, proxies=None):
  error_count = 0
  max_retries = 10
  headers["Content-Length"] = str(len(str(data).replace(" ","")))
  while True:
    try:
      if proxies:
        response = requests.post("https://jjvnmoyncmcewnuykyid.supabase.co/rest/v1/rpc/save_coins", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://jjvnmoyncmcewnuykyid.supabase.co/rest/v1/rpc/save_coins", headers=headers, json=data, timeout=30)
      response.raise_for_status()
      success = response.json()["success"]
      #print(response.text)
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DOTCOIN")
      RUN_DOTCOIN()
      break
    COUNTDOWN(10)
  return success
def LEVEL_UP(headers, data, typeUpgrade, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.post(f"https://jjvnmoyncmcewnuykyid.supabase.co/rest/v1/rpc/{typeUpgrade}", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post(f"https://jjvnmoyncmcewnuykyid.supabase.co/rest/v1/rpc/{typeUpgrade}", headers=headers, json=data, timeout=30)
      response.raise_for_status()
      success = response.json()["success"]
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DOTCOIN")
      RUN_DOTCOIN()
      break
    COUNTDOWN(10)
  return success
def TRY_LUCK(headers, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.post(f"https://jjvnmoyncmcewnuykyid.supabase.co/rest/v1/rpc/try_your_luck", headers=headers, json={"coins":150000}, proxies=proxies, timeout=30)
      else:
        response = requests.post(f"https://jjvnmoyncmcewnuykyid.supabase.co/rest/v1/rpc/try_your_luck", headers=headers, json={"coins":150000}, timeout=30)
      response.raise_for_status()
      #print(response.json())
      success = response.json()["success"]
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DOTCOIN")
      RUN_DOTCOIN()
      break
    COUNTDOWN(10)
  return success
def LIST_TASK(headers, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.get(f"https://api.dotcoin.bot/rest/v1/rpc/get_filtered_tasks?platform=android&locale=vi&is_premium=false", headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.get(f"https://api.dotcoin.bot/rest/v1/rpc/get_filtered_tasks?platform=android&locale=vi&is_premium=false", headers=headers, timeout=30)
      print(response.status_code)
      response.raise_for_status()
      listTask = response.json()
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DOTCOIN")
      RUN_DOTCOIN()
      break
    COUNTDOWN(10)
  return listTask
def LIST_TASK(headers, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.get("https://api.dotcoin.bot/rest/v1/rpc/get_filtered_tasks?platform=android&locale=vi&is_premium=false", headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.get("https://api.dotcoin.bot/rest/v1/rpc/get_filtered_tasks?platform=android&locale=vi&is_premium=false", headers=headers, timeout=30)
      response.raise_for_status()
      print(response.status_code)
      getdata = response.json()
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DOTCOIN")
      RUN_DOTCOIN()
      break
    COUNTDOWN(10)
  return getdata
def COMPLETE_TASK(headers, data, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.post(f"https://api.dotcoin.bot/rest/v1/rpc/complete_task", headers=headers, json=data, proxies=proxies, timeout=30)
      else:
        response = requests.post(f"https://api.dotcoin.bot/rest/v1/rpc/complete_task", headers=headers, json=data, timeout=30)
      response.raise_for_status()
      print(response.json())
      success = response.json()["success"]
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DOTCOIN")
      RUN_DOTCOIN()
      break
    COUNTDOWN(10)
  return success
def JOIN_GROUP(headers, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.post(f"https://api.dotcoin.bot/rest/v1/rpc/join_group", headers=headers, json={"gid":1001006503122}, proxies=proxies, timeout=30)
      else:
        response = requests.post(f"https://api.dotcoin.bot/rest/v1/rpc/join_group", headers=headers, json={"gid":1001006503122}, timeout=30)
      response.raise_for_status()
      #print(response.json())
      title = response.json()["title"]
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DOTCOIN")
      RUN_DOTCOIN()
      break
    COUNTDOWN(10)
  return title


def RUN_DOTCOIN():
  with open('config/dotcoin.json', 'r', encoding='utf-8') as file:
    config_data = json.loads(remove_comments(file.read()))
  users = config_data
  if len(users) > 10:
    print("Bạn chỉ được phép thêm tối đa 10 tài khoản để chạy tool")
    exit()
  for user in users:
    account = user["STT_ACCOUNT"]
    data_dotcoin = user["DATA"]
    if data_dotcoin == "" or data_dotcoin == ["thay_thế_bằng_authorization","thay_thế_bằng_x-telegram-user-id"]:
      print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {đỏ}Tài khoản {vàng}{account.split('_')[1]} {đỏ}DATA đang bị trống")
      continue
    authorization = data_dotcoin[0]
    user_id = data_dotcoin[1]
    with open('config/setting.json', 'r', encoding='utf-8') as file:
      config_acc = json.loads(remove_comments(file.read()))[account]
    proxy_list = config_acc["proxy"]
    type_proxy = config_acc["type_proxy"]
    user_agent = config_acc["user-agent"]
    if proxy_list != "":
      proxy_list = proxy_list.split(":")
      proxy = f"{type_proxy}://{proxy_list[2]}:{proxy_list[3]}@{proxy_list[0]}:{proxy_list[1]}"
      proxies = {
      'http': proxy,
      'https': proxy,}
    else:
      if account.split('_')[1] != "1":
        print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}Chuyển tài khoản do không có proxy")
        continue
      proxies = ""
    ip, fakeip = getIP(proxies)
    if ip == fakeip == None:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {đỏ}\nĐỔI TÀI KHOẢN DO KHÔNG LẤY ĐƯỢC IP, HÃY KIỂM TRA LẠI PROXY\n")
      continue
    headers = {
      "Content-Length": "2",
      "X-Client-Info": "postgrest-js/0.0.0-automated",
      "Sec-CH-UA": '"Android WebView";v="125", "Chromium";v="125", "Not.A/Brand";v="24"',
      "Sec-CH-UA-Mobile": "?1",
      "Authorization": authorization,
      "User-Agent": user_agent,
      "Content-Type": "application/json",
      "Content-Profile": "public",
      "Apikey": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Impqdm5tb3luY21jZXdudXlreWlkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDg3MDE5ODIsImV4cCI6MjAyNDI3Nzk4Mn0.oZh_ECA6fA2NlwoUamf1TqF45lrMC0uIdJXvVitDbZ8",
      "X-Telegram-User-Id": user_id,
      "Sec-CH-UA-Platform": '"Android"',
      "Accept": "*/*",
      "Origin": "https://dot.dapplab.xyz",
      "Sec-Fetch-Site": "cross-site",
      "Sec-Fetch-Mode": "cors",
      "Sec-Fetch-Dest": "empty",
      "Referer": "https://dot.dapplab.xyz/",
      "Accept-Encoding": "gzip, deflate, br, zstd",
      "Accept-Language": "vi-VN,vi;q=0.9,en-US;q=0.8,en;q=0.7",
      "Priority": "u=1, i"}
    username, balance, energy, clan, dame, energyMax, level, try_luck = PROFILE(headers, proxies)
    if clan != None:
      titleClan = clan["title"]
      coinsClan = f"{clan['total_coins']:,}"
      membersClan = clan["total_users"]
      energyClan = clan["attempts"]
      dameClan = clan["multitap"]
    else:
      titleClan = coinsClan = membersClan = energyClan = dameClan = None
    print(f"""{đậm}{đen}<<<<<<<<<<<<<<<<<{lam}[{vàngBG}{đỏ}THÔNG TIN TÀI KHOẢN DOTCOIN{đenBG}{lam}]{đen}>>>>>>>>>>>>>>>>>\n{đen}〘👤〙{trắng}UserName {đỏ}: {lục}{username} {trắng}({hồng}{account.split('_')[1]}{trắng})\n{đen}〘🪙〙{trắng}Số Dư {đỏ}: {vàng}{balance:,}\n{đen}〘📊〙{trắng}Thông số Game{đỏ}: {lục}+{dame}{đen}/{lục}click {vàng}{energy}{đỏ}/{vàng}{energyMax}⚡\n{đen}〘📧〙{trắng}Thông tin Clan{đỏ}: {xanh}{titleClan} {đen}|{vàng}{coinsClan}🪙{đen}|{lục}{membersClan}👥{đen}|{vàng}+{energyClan}🔋 {hồng}+{dameClan}👆\n{đen}〘🌏〙{trắng}IP {đỏ}: {nâu}{ip} {lục}»»» {trắng}Fake IP {đỏ}: {lam}{fakeip}\n""")
    start_time = datetime.now()
    print(f"{đỏ}\033[1;33;40mBẮT ĐẦU CHẠY TOOL {thường}{đậm}{đỏ}» {đen}[{vàng}{start_time.strftime('%H:%M:%S')}{đen}]\n")
    if clan == None:
      try:
        title = JOIN_GROUP(headers, proxies)
        if title:
          now_time = datetime.now().strftime("%H:%M:%S")
          print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã tham gia group {vàng}{title}\n")
      except: pass
    if try_luck > 0:
      success = TRY_LUCK(headers, proxies)
      if success == True:
        now_time = datetime.now().strftime("%H:%M:%S")
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã nhận được {150000:,} từ {vàng}Dotcoin Game x2\n")
    def UPGRADE(balance, dame, energy, energyMax):
      success = LEVEL_UP(headers, {"lvl":dame}, "add_multitap", proxies)
      if success == True:
        username, newbalance, energy, clan, dame, energyMax, level = PROFILE(headers, proxies)
        price = balance - newbalance
        now_time = datetime.now().strftime("%H:%M:%S")
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã nâng cấp {hồng}Multitap {trắng}({lam}{dame-1}{trắng}) {đỏ}-{price} {đen}» {vàng}{newbalance:,}\n")
        balance = newbalance
      success = LEVEL_UP(headers, {"lvl":energyMax-9}, "add_attempts", proxies)
      if success == True:
        username, newbalance, energy, clan, dame, energyMax, level = PROFILE(headers, proxies)
        price = balance - newbalance
        now_time = datetime.now().strftime("%H:%M:%S")
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã nâng cấp {hồng}Daily Attempts {trắng}({lam}{energyMax-10}{trắng}) {đỏ}-{price:,} {đen}» {vàng}{newbalance:,}\n")
        balance = newbalance
      return balance, dame, energy, energyMax
    #balance, dame, energy, energyMax = UPGRADE(balance, dame, energy, energyMax)
    """
    listTask = LIST_TASK(headers, proxies)
    for task in listTask:
      if task["category"] != 1:
        print(task)
        success = COMPLETE_TASK(headers, {"oid":task['id']}, proxies)
        now_time = datetime.now().strftime("%H:%M:%S")
        if success == True:
          print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã hoàn thành {lam}{task['title']} {vàng}+{task['reward']:,}\n")
        else:
          print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ}Hoàn thành {lam}{task['title']} {đỏ}thất bại\n")
    """
    while True:
      if energy > 0:
        for i in range(0,energy):
          #print()
          success = CLICK(headers, {"coins":20000}, proxies)
          if success == True:
            username, newbalance, energy, clan, dame, energyMax, level, try_luck = PROFILE(headers, proxies)
            collectAmount = newbalance - balance
            balance = newbalance
            now_time = datetime.now().strftime("%H:%M:%S")
            print(f"{đen}╔═{đỏ}[{vàng}{now_time}{đỏ}] {trắng}Đã CLICK {vàng}+{collectAmount:,} {đỏ}• {lam}{energy} energy {đỏ}»", end=" ")
            print(f"{vàng}{newbalance:,}\n{đen}╚⫸{hồng}Link tool & hướng dẫn tại Telegram{đỏ}: {lục}@AirdropToolChannel\n")
            #balance, dame, energy, energyMax = UPGRADE(balance, dame, energy, energyMax)
          else:
            now_time = datetime.now().strftime("%H:%M:%S")
            print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ} Click thất bại!")
      else:
        print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}HẾT LƯỢT CLICK, HẾT BOOSTERS {đỏ}» {vàng}ĐỔI TÀI KHOẢN")
        break
RUN_DOTCOIN()"