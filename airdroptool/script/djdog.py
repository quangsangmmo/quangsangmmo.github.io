api_key = "import requests, time
import json, random, string, os
from datetime import datetime, timezone
from termcolor import colored
from function import *
version = "2.0.0"
name_tool = "djdog"
BANNER(name_tool, version)
print(f"""
{đỏ}⟩{vàng}⟩{lục}⟩ {lam}CÁC CHỨC NĂNG CỦA TOOL
{đỏ}[{vàng}+{đỏ}] {trắng}Auto click
{đỏ}[{vàng}+{đỏ}] {trắng}Auto nâng cấp
{đỏ}[{vàng}+{đỏ}] {trắng}Auto làm nhiệm vụ 
""")
def LOGIN(headers, data, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.get("https://api.djdog.io/telegram/login?"+data, headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.get("https://api.djdog.io/telegram/login?"+data, headers=headers, timeout=30)
      response.raise_for_status()
      getdata = response.json()["data"]
      username = getdata["telegramUsername"]
      token = getdata["accessToken"]
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DJDOG")
      RUN_DJDOG()
      break
    COUNTDOWN(10)
  return username, token
def BAR_AMOUNT(headers, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.get("https://api.djdog.io/pet/barAmount", headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.get("https://api.djdog.io/pet/barAmount",headers=headers, timeout=30)
      response.raise_for_status()
      getdata = response.json()["data"]
      energy = getdata["availableAmount"]
      balance = getdata["goldAmount"]
      level = getdata["level"]
      goldPerSecond = getdata["goldPerSecond"]
      maxEnergy = getdata["barGoldLimit"]
      clickCoefficient = getdata["clickCoefficient"]
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DJDOG")
      RUN_DJDOG()
      break
    COUNTDOWN(10)
  return energy, balance, level, goldPerSecond, maxEnergy, clickCoefficient
def INFORMATION(headers, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.get("https://api.djdog.io/pet/information", headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.get("https://api.djdog.io/pet/information",headers=headers, timeout=30)
      response.raise_for_status()
      adopted = response.json()["data"]["adopted"]
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DJDOG")
      RUN_DJDOG()
      break
    COUNTDOWN(10)
  return adopted
def ADOPTED(headers, proxies=None):
  error_count = 0
  max_retries = 10
  headers["content-length"] = "0"
  while True:
    try:
      if proxies:
        response = requests.post("https://api.djdog.io/pet/adopt", headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api.djdog.io/pet/adopt",headers=headers, timeout=30)
      response.raise_for_status()
      data = response.json()["data"]
      headers.pop("content-length")
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DJDOG")
      RUN_DJDOG()
      break
    COUNTDOWN(10)
  return data
def CLICK(headers, countClick, proxies=None):
  error_count = 0
  max_retries = 10
  headers["content-length"] = "0"
  while True:
    try:
      if proxies:
        response = requests.post("https://api.djdog.io/pet/collect?clicks="+str(countClick), headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api.djdog.io/pet/collect?clicks="+str(countClick),headers=headers, timeout=30)
      response.raise_for_status()
      getdata = response.json()["data"]
      if getdata != None:
        amount = getdata["amount"]
      else:
        amount = 'error'
      headers.pop("content-length")
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DJDOG")
      RUN_DJDOG()
      break
    COUNTDOWN(10)
  return amount
def TASK_LISK(headers, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.get("https://api.djdog.io/task/list", headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.get("https://api.djdog.io/task/list",headers=headers, timeout=30)
      response.raise_for_status()
      listTask = response.json()["data"]["taskDetails"]
      nextTaskLvFloor = response.json()["data"]["nextTaskLvFloor"]
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DJDOG")
      RUN_DJDOG()
      break
    COUNTDOWN(10)
  return listTask, nextTaskLvFloor
def TASK_FINISH(headers, id_task, proxies=None):
  error_count = 0
  max_retries = 10
  headers["content-length"] = "0"
  while True:
    try:
      if proxies:
        response = requests.post("https://api.djdog.io/task/finish?taskIds="+str(id_task), headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api.djdog.io/task/finish?taskIds="+str(id_task),headers=headers, timeout=30)
      response.raise_for_status()
      data = response.json()["data"]
      headers.pop("content-length")
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DJDOG")
      RUN_DJDOG()
      break
    COUNTDOWN(10)
  return data
def BOX_MALL(headers, proxies=None):
  error_count = 0
  max_retries = 10
  while True:
    try:
      if proxies:
        response = requests.get("https://api.djdog.io/pet/boxMall", headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.get("https://api.djdog.io/pet/boxMall",headers=headers, timeout=30)
      response.raise_for_status()
      balance = response.json()["data"]["goldAmount"]
      priceUprade = response.json()["data"]["levelUpAmount"]
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DJDOG")
      RUN_DJDOG()
      break
    COUNTDOWN(10)
  return balance, priceUprade
def LEVEL_UP(headers, id_task, proxies=None):
  error_count = 0
  max_retries = 10
  headers["content-length"] = "0"
  while True:
    try:
      if proxies:
        response = requests.post("https://api.djdog.io/pet/levelUp/0", headers=headers, proxies=proxies, timeout=30)
      else:
        response = requests.post("https://api.djdog.io/pet/levelUp/0",headers=headers, timeout=30)
      response.raise_for_status()
      data = response.json()["data"]
      headers.pop("content-length")
      break
    except:
      error_count = handleErrors(error_count, max_retries)
    if error_count >= max_retries:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã gặp lỗi quá 10 lần, khởi chạy lại tool DJDOG")
      RUN_DJDOG()
      break
    COUNTDOWN(10)
  return data

def RUN_DJDOG():
  with open('config/djdog.json', 'r', encoding='utf-8') as file:
    config_data = json.loads(remove_comments(file.read()))
  users = config_data
  if len(users) > 10:
    print("Bạn chỉ được phép thêm tối đa 10 tài khoản để chạy tool")
    exit()
  for user in users:
    account = user["STT_ACCOUNT"]
    authorization = user["AUTHORIZATION"]
    if authorization == "" or authorization == "thay_thế_bằng_authorization":
      print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {đỏ}Tài khoản {vàng}{account.split('_')[1]} {đỏ}DATA đang bị trống")
      continue
    with open('config/setting.json', 'r', encoding='utf-8') as file:
      config_acc = json.loads(remove_comments(file.read()))[account]
    proxy_list = config_acc["proxy"]
    type_proxy = config_acc["type_proxy"]
    user_agent = config_acc["user-agent"]
    if proxy_list != "":
      proxy_list = proxy_list.split(":")
      proxy = f"{type_proxy}://{proxy_list[2]}:{proxy_list[3]}@{proxy_list[0]}:{proxy_list[1]}"
      proxies = {
      'http': proxy,
      'https': proxy,}
    else:
      if account.split('_')[1] != "1":
        print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}Chuyển tài khoản do không có proxy")
        continue
      proxies = ""
    ip, fakeip = getIP(proxies)
    if ip == fakeip == None:
      now_time = datetime.now().strftime("%H:%M:%S")
      print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {đỏ}\nĐỔI TÀI KHOẢN DO KHÔNG LẤY ĐƯỢC IP, HÃY KIỂM TRA LẠI PROXY\n")
      continue
    headers = {
      'Host': 'api.djdog.io',
      'sec-ch-ua': '"Not/A)Brand";v="8", "Chromium";v="126", "Android WebView";v="126"',
      'accept': 'application/json, text/plain, */*',
      'sec-ch-ua-mobile': '?1',
      'user-agent': user_agent,
      'sec-ch-ua-platform': '"Android"',
      'origin': 'https://djdog.io',
      'x-requested-with': 'mark.via.gq',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      'accept-encoding': 'gzip, deflate, br, zstd',
      'accept-language': 'vi-VN,vi;q=0.9,en-US;q=0.8,en;q=0.7',
      'priority': 'u=1, i'
  }
    #username, token = LOGIN(headers, data, proxies)
    headers["authorization"] = authorization
    adopted = INFORMATION(headers, proxies)
    if adopted == False:
       data = ADOPTED(headers, proxies)
    energy, balance, level, goldPerSecond, maxEnergy, clickCoefficient = BAR_AMOUNT(headers, proxies)
    print(f"""{đậm}{đen}<<<<<<<<<<<<<<<<<{lam}[{vàngBG}{đỏ}THÔNG TIN TÀI KHOẢN DJDOG.IO{đenBG}{lam}]{đen}>>>>>>>>>>>>>>>>\n{đen}〘👤〙{trắng}Tài khoản{đỏ}: {trắng}({hồng}{account.split('_')[1]}{trắng})\n{đen}〘🪙〙{trắng}Số Dư {đỏ}: {vàng}{balance:,}\n{đen}〘🔢〙{trắng}Level{đỏ}: {lam}{level}\n{đen}〘📊〙{trắng}Thông số Game{đỏ}: {lục}{energy}{đen}/{lục}{maxEnergy} {đen}| {vàng}{goldPerSecond}{đen}/{vàng}s\n{đen}〘🌏〙{trắng}IP {đỏ}: {nâu}{ip} {lục}»»» {trắng}Fake IP {đỏ}: {lam}{fakeip}\n""")
    start_time = datetime.now()
    print(f"{đỏ}\033[1;33;40mBẮT ĐẦU CHẠY TOOL {thường}{đậm}{đỏ}» {đen}[{vàng}{start_time.strftime('%H:%M:%S')}{đen}]\n")
    while True:
      if energy/level > 10:
        if energy/level > 500:
          countClick = random.randint(400,500)
        else:
          countClick = int(energy/level)
      else: break
      amount = CLICK(headers, countClick, proxies)
      now_time = datetime.now().strftime("%H:%M:%S")
      if amount == 'error':
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Bị dính delay {đen}» {đỏ}Dừng click")
        break
      if amount > 0:
        print(f"{đen}╔═{đỏ}[{vàng}{now_time}{đỏ}] {trắng}Đã click {lam}{countClick} {trắng}lần {vàng}+{amount:,}")
        print(f"{đen}╚⫸{hồng}Link tool & hướng dẫn tại Telegram{đỏ}: {lục}@AirdropToolChannel\n")
      else:
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ}Click nhận poins thất bại")
      COUNTDOWN(10)
      energy, balance, level, goldPerSecond, maxEnergy, clickCoefficient = BAR_AMOUNT(headers, proxies)
    balance, priceUprade = BOX_MALL(headers, proxies)
    while balance > priceUprade:
      data = LEVEL_UP(headers, proxies)
      now_time = datetime.now().strftime("%H:%M:%S")
      if data == True:
        balance, priceUprade = BOX_MALL(headers, proxies)
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã nâng cấp {lam}BOOST {đỏ}-{priceUprade:,} {đen}» {vàng}{balance:,}")
      else:
        print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ}Nâng cấp thất bại")
    listTask,nextTaskLvFloor = TASK_LISK(headers, proxies)
    if True:
      for task in listTask:
        id_task = task["taskId"]
        reward_task = task["reward"]
        inviteNum = task["inviteNum"]
        if task["finished"] == None and inviteNum == 0:
          data = TASK_FINISH(headers, id_task, proxies)
          now_time = datetime.now().strftime("%H:%M:%S")
          if data == True:
            print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {trắng}Đã hoàn thành nhiệm vụ {lam}{id_task} {vàng}+{reward_task:,}")
          else:
            print(f"{đỏ}⟨{vàng}{now_time}{đỏ}⟩ {đỏ}Hoàn thành nhiệm vụ {lam}{id_task} {đỏ}thất bại")
    else:
      print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}Chưa đạt level {lam}{nextTaskLvFloor} {trắng}để làm nhiệm vụ")
    print(f"{đỏ}⟩{vàng}⟩{lục}⟩ {trắng}ĐỔI TÀI KHOẢN")
RUN_DJDOG()"